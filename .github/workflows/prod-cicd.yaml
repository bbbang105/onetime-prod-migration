name: 🚀 Build & Deploy workflow on prod environment

#on:
#  pull_request:
#    branches: [main]
#    types: [closed]

on:
  push:
    branches: [main]

permissions:
  contents: read

jobs:
  build-and-push:
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: ✅ 브랜치 체크아웃
        uses: actions/checkout@v3
      - name:  cache-gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: 📦 프로젝트 빌드
        run: ./gradlew clean build
      - name: 🏗️ Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: 🏗️ Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: 🔐 AWS ECR 로그인
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
      - name: 🐳 ECR 로그인
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: 📦 Docker 이미지 빌드 및 ECR 푸시 (for ARM64)
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: prod/onetime-backend
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker buildx build --platform linux/arm64 -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG --push .

  deploy:
    name: Deploy to Server
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: 🔐 AWS 자격 증명 설정
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
      - name: 🚀 서버에 배포 스크립트 실행
        run: |
          aws ssm send-command \
            --instance-ids "${{ secrets.EC2_INSTANCE_ID }}" \
            --document-name "AWS-RunShellScript" \
            --comment "Deploying from GitHub Actions ${{ github.sha }}" \
            --parameters '{"commands":["cd /home/ubuntu/deploy && ./deploy.sh ${{ github.sha }}"]}'
